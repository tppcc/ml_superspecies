! ======================================================================
! ===
! === LOTOS-EUROS run description
! ===
! === Settings for CAMS61/WP1-rerun.
! ===
! ======================================================================

  


! ######################################################################
! ###
! ### settings
! ###
! ######################################################################


! ------------------------------------------------
! run description
! ------------------------------------------------


! exeriment:
!run.id             :  U3a
!run.id             :  BASE
!run.id             :  EXP-SS-DUST
!run.id             :  EXP-PBL
!run.id             :  EXP-BVOC
run.id             :  EXP-VBS
!run.id             :  EXP-O3DEP
!!~ from script:
!run.id             :  ${RUNID}

! project description:
run.project        :  LOTOS-EUROS-ML

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#if "${run.id}" in ["U3a"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! batch:
my.batch            :  rerun

! time range:
!my.trange          :  d0112
my.trange          :  m01
!my.trange          :  m12
!my.trange          :  ${TRANGE}

! domain:
!grid.name         : MACC
grid.name         : CAMS-II

! standard Lmin=100:
my.Lmin            :  100

!~ no extensions:
!my.ext             : 

!!~ testing, merged snow-dep
!run.id             :  test-snow

!!~ testing mixlayer
!my.ext             :  __mixlayer
!my.trange          :  m14

!!~ reproduce meteo output
!my.ext             :  __tp
!my.trange          :  ${TRANGE}

!! testing higher Lmin:
!my.Lmin            :  200
!my.ext             :  __Lmin${my.Lmin}

!~ testing stability fix:
my.ext             :  __stab

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${run.id}" in ["BASE","EXP-SS-DUST","EXP-PBL","EXP-BVOC","EXP-VBS","EXP-O3DEP"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!~ sensitivity runs:
my.batch            :  sensi

! time range:
!my.trange          :  y1
!my.trange          :  jja
my.trange          :  feb20
!my.trange          :  ${TRANGE}

! domain:
grid.name         : CAMS-II-02

! standard Lmin=100:
my.Lmin            :  100

! optional extensions:
!!~ default:
!my.ext             : 
!~ testing stability fix:
my.ext             :  __stab

!!~ testing with IFS stability class:
!my.ext             :  __monin-ifs

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#else
#error unsupported my.run.id "${run.id}"
#endif
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! subdir in project scratch:
my.subdir          :  ${grid.name}/${run.id}${my.ext}/${my.trange}


! ----------------------------------------
! job tree
! ----------------------------------------

! job tree definition:
#include base/${my.le.patch}/rc/lotos-euros-jobtree.rc

! copy and build settings:
!#include base/${my.le.patch}/rc/lotos-euros-build.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-build.rc

! copy job is running in foreground (see "lotos-euros-jobtree.rc"),
! enable the following line to have also the build job in foreground:
jobtree.le.build.script.class           :  utopya.UtopyaJobScriptForeground

!! skip some tasks while testing ...
!jobtree.le.copy.jump-to      :  le.build
!jobtree.le.copy.jump-to      :  le.run
!jobtree.le.copy.jump-to      :  le.post


! ----------------------------------------
! build and run directories
! ----------------------------------------

! The code is copied to and compiled in a 'build' directory,
! and the run, output, and restart are placed next to it:
!
!   <run.project.dir> / build
!                     / run
!                     / output
!                     / restart
!                    
! Define this project directory here, eventually use
! the 'my.scratch' variable (defined in machine.rc):
!
! base directory for build/run/etc : choose an appropriate run
! directory on a scratch disk, or use ${my.scratch} 
my.project.dir      :  ${my.scratch}/projects/${run.project}/${my.subdir}
!my.project.dir      :  ${MODAS_SCRATCH}/projects/${run.project}/${my.subdir}


! ----------------------------------------
! compile flags
! ----------------------------------------

! keys to select compiler flags; see compiler.*.rc for all values:
! ---
! optim-none check-all    : Use for testing. Full model check on NaN, not allocated variables etc. (model will be very slow
! optim-fast              : Use for normal runs. Compiler uses optimal calculation settings (model very fast). Use this for normal runs
! optim-fast optim strict : Use for comparing two model runs, which should be exactly the same. 
! ---
!my.configure.flags      :  optim-none check-all debug
!my.configure.flags      :  optim-fast optim-strict
my.configure.flags      :  optim-fast


! ----------------------------------------
! machine specific stuff (compiler name & flags, lib paths, ... )
! ----------------------------------------

! machine specific settings:
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#if "app-hpc" in "${HOSTNAME}"
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! include settings:
!#include base/${my.le.patch}/rc/machine-tno-hpc3.rc
#include proj/cams61/wp1/${my.le.patch}/rc/machine-tno-hpc3.rc

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "bullx" in "${HOSTNAME}"
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! include settings:
!#include base/${my.le.patch}/rc/machine-knmi-hpc.rc
#include proj/cams61/wp1/${my.le.patch}/rc/machine-knmi-hpc.rc

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#else
#error could not guess machine for HOSTNAME "${HOSTNAME}"
#endif
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


! ----------------------------------------
! expert settings
! ----------------------------------------

! include expert settings to build source code
#include base/${my.le.patch}/rc/lotos-euros-expert.rc


! ######################################################################
! ###
! ### source code
! ###
! ######################################################################


! ----------------------------------------
! version
! ----------------------------------------

! base number:
my.le.version     :  v2.2

! patch number:
my.le.patch       :  001

! combined release number:
my.le.release     :  ${my.le.version}.${my.le.patch}


! ----------------------------------------
! source directories
! ----------------------------------------

! The code that will be compiled is collected from one
! or more source directories. A list with the directories
! should be provided, e.g.:
!
!   my.le.source.dirs  :  base/000 proj/newemis proj/mytest ...
!
! The content of the'src', 'bin', and other subdirs of 
! these directories is copied to the build directory,
! in the specified order. Thus, in this example, the files
! in 'proj/newemis/src/' will replace those copied from
! 'base/000/src' etc.
!
#if "${my.ext}" in [""]
my.source.ext              :  
#elif "${my.ext}" in ["__stab","__monin-ifs"]
my.source.ext              :  proj/cams61/wp1/${my.le.patch}__stab
#else
#error unsupported my.ext "${my.ext}"
#endif
!
#if "${run.id}" in ["U3a"]

my.le.source.dirs      :  base/${my.le.patch} \
                          proj/lukwa/${my.le.patch} \
                          proj/cams61/wp1/${my.le.patch}  ${my.source.ext}

#elif "${run.id}" in ["BASE","EXP-SS-DUST","EXP-PBL","EXP-BVOC","EXP-VBS"]

! fixes for wetdep, taken from beta/002
my.le.source.dirs      :  base/${my.le.patch} \
                          proj/lukwa/${my.le.patch} \
                          proj/cams61/wp1/${my.le.patch} \
                          proj/cams61/wp1/${my.le.patch}_beta-002  ${my.source.ext}

#elif "${run.id}" in ["EXP-O3DEP"]

! fixes for wetdep, taken from beta/002
my.le.source.dirs      :  base/${my.le.patch} \
                          proj/lukwa/${my.le.patch} \
                          proj/cams61/wp1/${my.le.patch} \
                          proj/cams61/wp1/${my.le.patch}_beta-002  ${my.source.ext} \
                          proj/o3dep/${my.le.patch} \

#else
#error unsupported run.id "${run.id}"
#endif

! ERROR:
!                          proj/snow-depo/${my.le.patch}

! ----------------------------------------
! resources
! ----------------------------------------

!! maximum run time [days-hours:minutes:seconds], might be used in machine settings:
!my.run.time         :  2-00:00:00

!! amount of memory needed [Gb], might be used in machine settings:
!my.run.memory       :  15

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#if "${run.id}" in ["U3a"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

my.run.queue        :  longq
par.ntask           :  16
my.run.memory       :  64
my.run.time         :  7-00:00:00

!my.run.queue        :  defq
!par.ntask           :  16
!my.run.memory       :  64
!my.run.time         :  1:00:00

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${run.id}" in ["BASE","EXP-SS-DUST","EXP-PBL","EXP-BVOC","EXP-VBS", "EXP-O3DEP"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

my.run.queue        :  longq
par.ntask           :  16
my.run.memory       :  32
my.run.time         :  7-00:00:00

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#else
#error unsupported run.id "${run.id}"
#endif
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


! ----------------------------------------
! parallelisation
! ----------------------------------------

! ~ MPI / domain decomposition

! enable MPI (True|False) ?
#if ${par.ntask} == 0
par.mpi      :  False
#else
par.mpi      :  True
#endif

! number of mpi tasks ;
! use 0 for compilation without MPI:
!par.ntask    :  56
!par.ntask    :  ${MY_NTASK}

! decomposition:
#if ${par.ntask} <= 1
domains.x         :  1
domains.y         :  1
#elif ${par.ntask} == 2
domains.x         :  2
domains.y         :  1
#elif ${par.ntask} == 4
domains.x         :  2
domains.y         :  2
#elif ${par.ntask} == 6
domains.x         :  2
domains.y         :  3
#elif ${par.ntask} == 7
domains.x         :  1
domains.y         :  7
#elif ${par.ntask} == 8
domains.x         :  2
domains.y         :  4
#elif ${par.ntask} == 14
domains.x         :  2
domains.y         :  7
#elif ${par.ntask} == 16
domains.x         :  4
domains.y         :  4
#elif ${par.ntask} == 24
domains.x         :  4
domains.y         :  6
#elif ${par.ntask} == 28
domains.x         :  4
domains.y         :  7
#elif ${par.ntask} == 32
domains.x         :  4
domains.y         :  8
#elif ${par.ntask} == 42
domains.x         :  6
domains.y         :  7
#elif ${par.ntask} == 56
domains.x         :  8
domains.y         :  7
#elif ${par.ntask} == 112
domains.x         :  14
domains.y         :  8
#else
#error could not set domain decomposition for par.ntask ${par.ntask}
#endif


! ~ openmp

! enable OpenMP (True|False) ?
#if ${par.nthread} == 0
par.openmp   :  False
#else
par.openmp   :  True
#endif

! number of threads
! use 0 for compilation without OpenMP:
par.nthread  :  0
!par.nthread  :  ${MY_NTHREAD}

! ----------------------------------------
! logging
! ----------------------------------------

! write to log files (per domain) in output directory?
! not necessary if job writes file par task already:
log.files                     :  F

! when using log files, still echo root to std.out. ?
log.files.root_to_stdout      :  T

!! for testing; uncomment the code in 'le_grid.F90':
!test.debug.i      :  
!test.debug.j      :  

!! print data values in le_logging:
!test.debug.vars   :  
!test.debug.vars   :  z0m_lu z0m blh halt_crnr_met halt_crnr halt_met halt \
!                     h hp_crnr_met hp_crnr hp airm t_met \
!                     duudz ri_ifs zust sstar tsurf qstar \
!                     tsurf Q0v monin monin_inv \
!                     ustar kz_ifs kz_ifs_lelv

! write message when file is opened with c3po?
! used in operational runs to trap missing files:
log.show_filename_on_open                   :  T


! ######################################################################
! ###
! ### run settings : modify if necessary !
! ###
! ######################################################################

!
! --> All settings that setup your simulation.
!

! ----------------------------------------
! time
! ----------------------------------------

!! timerange:
!timerange.start             :  2017-12-26 00:00:00
!timerange.end               :  2019-01-01 00:00:00

#if "${my.trange}" == "y1"

!le.restart                  :  F
!timerange.start             :  2017-12-26 00:00:00
!timerange.end               :  2019-01-01 00:00:00

#if "${run.id}" in ["BASE"]
le.restart                  :  T
timerange.start             :  2018-12-25 00:00:00
timerange.end               :  2019-01-01 00:00:00
#elif "${run.id}" in ["EXP-SS-DUST"]
le.restart                  :  T
timerange.start             :  2018-10-26 00:00:00
timerange.end               :  2019-01-01 00:00:00
#elif "${run.id}" in ["EXP-PBL"]
le.restart                  :  T
timerange.start             :  2018-03-23 00:00:00
timerange.end               :  2019-01-01 00:00:00
#elif "${run.id}" in ["EXP-BVOC"]
le.restart                  :  T
timerange.start             :  2018-03-27 00:00:00
timerange.end               :  2019-01-01 00:00:00
#else
#error unsupported my.run.id "${run.id}"
#endif

#elif "${my.trange}" == "jja"

le.restart                  :  F
timerange.start             :  2018-05-26 00:00:00
timerange.end               :  2018-09-01 00:00:00

#elif "${my.trange}" == "feb20"

le.restart                  :  F
timerange.start             :  2018-02-15 00:00:00
timerange.end               :  2018-03-01 00:00:00
!timerange.start	     	    :	2018-02-20 00:00:00  ! added by obin for testing
!timerange.end		    :	2018-02-20 02:00:00  ! added by obin for testing

#elif "${my.trange}" == "q1"

le.restart                  :  F
timerange.start             :  2017-12-26 00:00:00
timerange.end               :  2018-04-01 00:00:00

#elif "${my.trange}" == "q2"

le.restart                  :  F
timerange.start             :  2018-03-26 00:00:00
timerange.end               :  2018-07-01 00:00:00

#elif "${my.trange}" == "q3"

le.restart                  :  F
timerange.start             :  2018-06-26 00:00:00
timerange.end               :  2018-10-01 00:00:00

#elif "${my.trange}" == "q4"

le.restart                  :  F
timerange.start             :  2018-09-26 00:00:00
timerange.end               :  2019-01-01 00:00:00

#elif "${my.trange}" == "q5"

!le.restart                  :  T
!timerange.start             :  2019-01-01 00:00:00
!timerange.end               :  2019-04-01 00:00:00

le.restart                  :  T
timerange.start             :  2019-02-03 00:00:00
timerange.end               :  2019-04-01 00:00:00

#elif "${my.trange}" == "m01"

le.restart                  :  F
timerange.start             :  2017-12-26 00:00:00
timerange.end               :  2019-01-01 00:00:00

#elif "${my.trange}" == "d0112"

le.restart                  :  F
timerange.start             :  2018-01-12 09:00:00
timerange.end               :  2018-01-12 15:00:00

#elif "${my.trange}" == "m12"

le.restart                  :  F
timerange.start             :  2018-11-25 00:00:00
timerange.end               :  2019-01-01 00:00:00

#elif "${my.trange}" == "m14"

!le.restart                  :  F
!timerange.start             :  2019-01-25 00:00:00
!timerange.end               :  2019-03-01 00:00:00

le.restart                  :  T
timerange.start             :  2019-01-27 00:00:00
timerange.end               :  2019-03-01 00:00:00

#else
#error unsupported my.trange "${my.trange}"
#endif

! run in forecast mode (T|F) ?
! (thus, read forecast meteo series)
forecast.mode               :  F

! reference time for forecast;
! from here onward, read from forecast files:
forecast.timerange.base     :  2019-07-21 12:00:00

! maximum time step for operator spliting loop (minutes);
! output time steps are multiple of this:
timestep.max                :   60


! ----------------------------------------
! horizontal grid
! ----------------------------------------

! 
! ~ either select one of the pre-defined grids:
!

!grid.name         : MACC
!grid.name         : MACC-II
!grid.name         : CAMS-II
!grid.name         : NL-smogprog
!grid.name         : wrfd02

! grid definitions:
!#include base/${my.le.patch}/rc/lotos-euros-regions.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-regions.rc


!
! ~ or define the keys below ..
!

!! box within wrf grid:
!!   [-15,30] x [40,65] =  45 x 25 deg
!!  at 1/2 x 1/4 deg = 90 x 100 cells
!
!! define grid type:
!grid.type        :  cartesian
!grid.meteo_mapping  :  interpol
!
!! south west corner:
!grid.west         : -15.0
!grid.south        :  40.0
!! resolution: 
!grid.dlon         : 0.50
!grid.dlat         : 0.25
!! spacing:
!grid.nx           :  90
!grid.ny           : 100
!
!! domain name in LEIP input:
!my.leip.region     :  europe_w30e70s5n75


!
! ~ subset of WRF grid
!

! define grid type:
!grid.type        :  non-cartesian
!
!! sample file:
!grid.file.name         :  /data/WRF/wrfout_d02_2014-01-01_00:00:00
!! sample variable:
!grid.file.var          :  var_name=HGT
!! subset [i1,i2,j1,j2], negatives for all :
!grid.file.subset       :  -999 -999 -999 -999
!grid.file.subset       :  50 110 50 150


! ----------------------------------------
! vertical levels
! ----------------------------------------

!
! which type of model levels?
! number of levels?
!
!!~ LE original:
!levels.type                :  mixlayer
!~ Hybrid sigma pressure levels
!levels.type                :  hyblevel
!~ Input meteo levels
!levels.type                :  metlevel

#if "${my.ext}" in ["__mixlayer"]
levels.type                :  mixlayer
#elif "${my.ext}" in ["","__tp","__stab","__monin-ifs"]
levels.type                :  metlevel
#else
#error unsupported my.ext "${my.ext}"
#endif


!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#if "${levels.type}" == "mixlayer"
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! number of model layers:
!levels.nz           :  4
levels.nz           :  5
!levels.nz           :  8

! total number of layers including "top",
! should be nz+1 currently:
levels.nz_top             :  $(( ${levels.nz} + 1 ))
!
! calculation of diffusion
!   msp    : corrected values for kz with respect to height difference between surface/mixing layer
!   normal : 'Real' kz values, diffusion calculated by ghost points to correct height differences between layers
vdiff.kz_type : msp
!vdiff.kz_type : normal 
!
! mixlayer level definition, used by routine 'MixlayerVertexHeights' :
!       :
!  [ ------  top(5) ]
! 
!    ------  top(4)
!       ___           "resid2"
!    ---              "resid1"
!       ___  blh
!    __/              "max"
!    ------  dsurf
! -------------------
!~ top of surface layer:
mixlayer.surf_top              :  25.0
! minimum top of mix layer:
mixlayer.mix_topmin            :   50.0
!~ top heights from 4th onwards ;
! minimum thicknes of layers above mix,
! and factors for orography std.dev. added to this:
#if "${levels.nz}" == "4"
mixlayer.top                   :  3500.0
mixlayer.dmin                  :  500.0
mixlayer.sdofac                :  1.0
#elif "${levels.nz}" == "5"
mixlayer.top                   :  3500.0 5000.0
mixlayer.dmin                  :  500.0
mixlayer.sdofac                :  1.0 0.5
#elif "${levels.nz}" == "8"
mixlayer.top                   :  3500.0 5000.0 6500.0 8000.0 10000.0
mixlayer.dmin                  :  500.0
mixlayer.sdofac                :  1.0 0.5 0.0 0.0 0.0
#else
#error could not level tops for levels.nz "${levels.nz}"
#endif
! thickness of layer to hold aloft boundary conditions:
mixlayer.daloft                :  1000.0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${levels.type}" == "metlevel"
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! Level definition similar as in meteo model.

! number of layers that should be used:
levels.nz                     :  12
! layer combination, empty for no combination:
metlevel.combine              :  1 1 1 2 2 2 2 2 2 2 2 2

! total number of layers including "top"
levels.nz_top                 :  18
! layer combination, empty for no combination:
metlevel.combine_top          :  1 1 1 2 2 2 2 2 2 2 2 2   3 3 3 4 4 4

! calculation of diffusion, only normal available (msp: specific for 5-layer (mixing layer) scheme)
vdiff.kz_type                 :  normal

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${levels.type}" == "hyblevel"
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! Hybride sigma-pressure

! table with half level coefficients, relative to 'run' subdir in rundir:
hyblevel.coefficients         :  ../build/data/hyblevel-L137_CL42.csv

! select lowest 20 layers only (top at ~240 hPa):
levels.nz                     :  20

! total number of layers including "top":
levels.nz_top                 :  42

! --- use further coarsening for CrIS assimilation ---

!hyblevel.coefficients         :  ../build/data/hyblevel__L137_CL42__ml10p05.csv
!
!! select lowest 10 layers only (top at ~175 hPa):
!levels.nz                     :  10
!
!! total number of layers for full atmosphere:
!levels.nz_top                 :  15

! --- end use further coarsening for CrIS assimilation ---

! calculation of diffusion, only normal available:
vdiff.kz_type     : normal

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#else
#error unknown level type described
#endif
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


! ----------------------------------------
! vertical diffusion
! ----------------------------------------

! how to compute stability:
!~ using exposure classes (original)
!my.stab_type          : monin-exposure
!~ implementation of IFS method:
!my.stab_type          : monin-ifs

#if "${my.ext}" in ["","__stab"]
my.stab_type          : monin-exposure
#elif "${my.ext}" in ["__monin-ifs"]
my.stab_type          : monin-ifs
#else
#error unsupported my.ext "${my.ext}"
#endif


! ----------------------------------------
! data
! ----------------------------------------

! definition of model data fields, currently meteo:
!#include base/${my.le.patch}/rc/lotos-euros-data-meteo-${my.meteo}.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-data-meteo-${my.meteo}.rc


! ----------------------------------------
! meteo
! ----------------------------------------

! which meteo?
my.meteo          :  ecmwf
!my.meteo          :  wrf

! include detailed settings:
!#include base/${my.le.patch}/rc/lotos-euros-meteo-ecmwf.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-meteo-ecmwf.rc


! ----------------------------------------
! input collection
! ----------------------------------------

! location of LEIP produced input,
! region name is defined together with grid:
!my.leip.dir        :  ${my.data.dir}/LEIP/${my.leip.region}
!my.leip.dir        :  ${MODAS_ARCHIVE}/models/LEIP/${my.leip.region}
my.leip.dir        :  ${MODAS_SCRATCH}/models/LEIP/${my.leip.region}



! ######################################################################
! ###
! ### tracers
! ###
! ######################################################################

! Keywords to select tracers and reactions,
! in the tables found in the "groups" column.
! Group names supported by default (see expert.rc) :
!
!   cbm4              :  tracers/reactions of CBM4 scheme
!   sulphur           :  sulphur-only scheme (SO2 and SO4a, OH read)
!   methane           :  methane-only scheme (CH4, OH read)
!   co2               :  CO2 tracer
!   sf6               :  SF6 tracer
!   ppm               :  primary particulate matter
!   ec                :  elementary carbon
!   pom               :  primary organic matter
!   sia               :  secondary inorganic aerosols
!   seasalt           :  sodium aerosols representing seasalt
!   dust              :  dust aerosols
!   m7                :  M7 aerosol scheme (so4a, bc, oc, seasalt, dust)
!
!   basecation        :  base-cat-ion aerosols
!   hm                :  heavy metals
!   pollen            :  allergenic pollen tracers
!   ppm_ops			      :  primary-pm-tracers (4 size classes, following OPS model )
!
! * secondary organic aerosol:
!    - needs both 'vbs' and 'soa' groups
!    - emissions including residential wood combustion
!    - camx/wetdepos table including vbs tracers (default?)
!
!   soa               :  TERP reactions used as input to VBS
!   vbs               :  VBS tracers, TERP reactions used as input to VBS
! 
! * extra for output:
!
!   accum             :  accumulated species
!   biascorr          :  bias corrected species
!
! selected tracer groups:
!genes.group.selected          :  cbm4 ppm ec pom sia seasalt dust accum biascorr pollen
!#if "${my.ext}" == "__tp"
!genes.group.selected          :  ppm
!#else
!genes.group.selected          :  cbm4 ppm ec pom sia seasalt dust accum biascorr
!#endif

#if "${run.id}" in ["BASE","EXP-SS-DUST","EXP-PBL","EXP-BVOC", "EXP-O3DEP"]
genes.group.selected          :  cbm4 ppm ec pom sia seasalt dust accum biascorr
#elif "${run.id}" in ["EXP-VBS"]
genes.group.selected          :  cbm4 ppm ec pom sia seasalt dust accum biascorr vbs soa
#else
#error unsupported my.run.id "${run.id}"
#endif

! skip some of the tracers ?
! (only used to check backwards compatibility):
genes.tracers.skip            :   


! ######################################################################
! ###
! ### sinks
! ###
! ######################################################################

! ----------------------------------------
! dry deposition
! ----------------------------------------

! compute ozone flux specials (T|F) ?
deposition.ozone_flux_specials   :  F

! NH4+/H+ ratio 
! File created from budget output 'drynhx' 
! from a run with gamma_water set to zero.
! ~ zero gamma_water for production of the 'drynhx' budgets:
!deposition.gammawater.file  :  zero
! ~ actual file:
deposition.gammawater.file  :  ${my.data.dir}/ammonium/v3/gammawater_w30e56n29n70_050x025_v2x.nc


! ----------------------------------------
! wet deposition
! ----------------------------------------

! wet deposition scheme:
!le.wet_depos.type         :  EMEP
le.wet_depos.type         :  CAMx

! data file with properties for wet deposition routine for CAMx
le.wet_depos.CAMx.datafile  : ${my.data.dir}/wet_depos/CAMx/depos_data_wet_dry_v1.0.csv



! ######################################################################
! ###
! ### emissions
! ###
! ######################################################################

! List of available emissions:
! ~ anthropogenic reactive gasses and primary aerosols:
!     macc_iii         :   MACC-III 2000-2011
!     cams_v2_2_AP     :   CAMS/REG emissions, air pollutants
!     cams_v2_2_GHG    :   CAMS/REG emissions, green house gasses
!     cams_RWC_AP      :   including residential wood combustion
!     edgar            :   global inventory
!     ops			   :   Emissions used by OPS-model
! ~ GrETa emissions for Germany:
!     CAMS-2015-base-GrETa-gridding
!     CAMS-2015-RWC-update-GrETa-gridding
! ~ biogenic:
!   ~ vegetation emissions, choose one of:
!       bio            :   isoprene and terpene emissions
!       megan          :   MEGAN bio emis model, instead of "bio"
!   ~ for NOx emissions
!     	bio-no         :   parametrization by Yienger and Levy 
!   ~ wetland ch4 emissions
!       wetlands       :   WetCHARTs dataset
! ~ natural:
!     sea_salt
!     dust-wind
!     dust-resuspension
!     dust-agriculture
! ~ fires:
!     fire_macc_daily
!     fire_macc_hourly
! ~ pollen:
!     silam-pollen     : Pollen emissions following SILAM model, M.Sofiev
!
! ~ heavy metals:
!     hm              : Heavy metal emissions from MAPESI/PAREST database
!     hm-natural      : Natural Heavy metal emissions
!
! ~ testing:
!     point           : single point source
!
!#if "${my.ext}" == "__tp"
!le.emis.sets         :  
!#else

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#if "${run.id}" in ["U3a"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! sets:
le.emis.sets         :  cams_v3_1_AP \
                        bio \
                        bio-no \
                        sea_salt \
                        dust-wind dust-resuspension dust-agriculture \
                        fire_macc_daily

! adhoc factor:
le.emis.bio.factor   :  1.0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${run.id}" in ["BASE","EXP-PBL","EXP-VBS","EXP-O3DEP"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

le.emis.sets         :  cams_v2_2_REF2_AP \
                        bio \
                        bio-no \
                        sea_salt \
                        dust-wind dust-resuspension dust-agriculture \
                        fire_macc_daily

! adhoc factor:
le.emis.bio.factor   :  1.0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${run.id}" in ["EXP-SS-DUST"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! run without local sources for dust:
le.emis.sets         :  cams_v2_2_REF2_AP \
                        bio \
                        bio-no \
                        sea_salt \
                        fire_macc_daily

! adhoc factor:
le.emis.bio.factor   :  1.0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${run.id}" in ["EXP-BVOC"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

le.emis.sets         :  cams_v2_2_REF2_AP \
                        bio \
                        bio-no \
                        sea_salt \
                        dust-wind dust-resuspension dust-agriculture \
                        fire_macc_daily

! adhoc factor:
le.emis.bio.factor   :  3.0

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#else
#error unsupported run.id "${run.id}"
#endif
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

!#endif

! details per set:
!#include base/${my.le.patch}/rc/lotos-euros-emissions-v7.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-emissions-v7.rc


! ######################################################################
! ###
! ### land use / vegetation
! ###
! ######################################################################

! which data set ?
my.landuse  : smiatek
!my.landuse  : glc

! Use Corine Landcover 2006? This landuse will overwrite the others for locations available in this file
my.landuse.clc2006.enabled    : F

! Landuse accumulation types for stomatal ozone deposition
le.landuse.accumulation.types        : 
!le.landuse.accumulation.types        : Wheat Beech Spruce Clover

! include detailed settings:
!#include base/${my.le.patch}/rc/lotos-euros-landuse.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-landuse.rc

! Country fractions
le.country.fraction_file      :  ${my.data.dir}/Country_fractions/Europe/fractions_CAMSdomain_v3.nc


! ######################################################################
! ###
! ### boundary conditions
! ###
! ######################################################################

!
! Boundaries are filled from a number of sources:
!  ~~ climatologies:
!   clim-isak    : output from 2D Isaksen model
!   clim-const   : constant values for some aerosols, heavy-metals, and pops
!   clim-logan   : Logan ozone climatology; only within domain ewsn=[-25,70,18,70]
!   clim-emep    : EMEP report
!   clim-steady  : apply steady state to o3/no/no2
!  ~~ CAMS global CTM
!   data         : use le_data structures to read and remap
!                  boundary conditions from netcdf files
!  ~~ LOTOS-EUROS boundary conditions:
!   le           : output from previous LOTOS-EUROS run (conc-bound files)
!
! collected climatology boundary conditions:
!my.bound.clims    : clim-isak clim-const clim-logan clim-emep clim-steady
! extented domain to 72N, so not all of them fit (and not needed anyway ...)
my.bound.clims    : clim-isak clim-const            clim-emep clim-steady
!
! Provide a list with sources to apply; later sources overwrite previous:
#if "${my.ext}" in ["__tp"]
le.bound.types            :  
#elif "${my.ext}" in ["","__mixlayer","__stab","__monin-ifs"]
le.bound.types            :  ${my.bound.clims} data
#else
#error unsupported my.ext "${my.ext}"
#endif

! ~~

! details of climatologies:
#include base/${my.le.patch}/rc/lotos-euros-bound-clim.rc

! netcdf files:
!~ macc-nrt as produced by leip similar to meteo:
!#include base/${my.le.patch}/rc/lotos-euros-bound-nc-cams-nrt-fmt1.rc
!#include base/${my.le.patch}/rc/lotos-euros-bound-nc-cams-nrt-fmt2.rc
!~ macc re-analysis (2003-2012):
!#include base/${my.le.patch}/rc/lotos-euros-bound-nc-macc-rea-fmt1.rc

! netcdf files as available for validated re-analysis:
!#include base/${my.le.patch}/rc/lotos-euros-bound-nc-cams-vra.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-bound-cams-ra.rc

! netcdf files as available for the operational nrt runs:
!#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-bound-nc-cams-nrt-fmt3_climb.rc
!#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-bound-nc-cams-nrt-fmt3_climb_noSIA.rc

! ~~

! If a run from Lotos-Euros is used as boundary,
! specify the path/settings here:
le.bound.le.path          :  /data/output/myproject/myrunid
le.bound.le.key           :  model=LE;expid=myrunid;name=conc-bound
le.bound.le.key.labeling  :  model=LE;expid=myrunid;name=label-bound


! ######################################################################
! ###
! ### radiation
! ###
! ######################################################################

!! enabled (True|False) ?
!my.with.radiation      :  True

!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#if "${run.id}" in ["U3a","BASE","EXP-SS-DUST"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! with extinction and aod output:
my.with.radiation      :  True
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#elif "${run.id}" in ["EXP-PBL","EXP-BVOC","EXP-VBS","EXP-VBS","EXP-O3DEP"]
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! no rad output:
my.with.radiation      :  False
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#else
#error unsupported run.id "${run.id}"
#endif
!~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

! detailed settings:
!#include base/${my.le.patch}/rc/lotos-euros-radiation.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-radiation.rc


! ######################################################################
! ###
! ### bias correction
! ###
! ######################################################################
!
! Surface ozone bias correction:
!   'none'
!   'o3_smogprog_v19'
!   'o3_smogprog_v110'
le.biascorr.surface_ozone     :  o3_smogprog_v110

!
! Total PM bias correction factor applied to total PM output and AOD.
!
!   1.0    : default, no 'none'
!   2.0    : quite good approximation for the missing PM ..
!
!le.biascorr.total_pm.factor   :  1.0
!le.biascorr.total_pm.factor   :  2.0
le.biascorr.total_pm.factor   :  1.7
!
!le.biascorr.aod.factor        :  1.0
le.biascorr.aod.factor        :  1.6


! ######################################################################
! ###
! ### Labeling
! ###
! ######################################################################

! enabled (True|False) ?
my.with.labeling    :  False

                      

! ######################################################################
! ###
! ### output
! ###
! ######################################################################

! settings for validation output:
!#include base/${my.le.patch}/rc/lotos-euros-output.rc
#include proj/cams61/wp1/${my.le.patch}/rc/lotos-euros-output.rc

! to have your own specific output, either:
!  - create a new include file
!  - copy the required content from the template to here


! ######################################################################
! ###
! ### restart
! ###
! ######################################################################

! ~~ restore state from restart file ?

! start from restart files (T|F) ?
!le.restart                    :  F

! place where restart are read from;
! file names : <model>_<expid>_<name>_<ccyymmdd>_<hhmm>.nc
le.restart.path               :  ${my.project.dir}/restart
le.restart.key                :  model=LE;expid=${run.id};name=state

! ~~ save new restart files ?

! write restart files (T|F) ? frequency in hours:
le.restart.save               :  T
le.restart.save.dhour         :  24.0

! place where restart files are written to;
! file names : <model>_<expid>_<name>_<ccyymmdd>_<hhmm>.nc
le.restart.save.path          :  ${my.project.dir}/restart
le.restart.save.key           :  model=LE;expid=${run.id};name=state


! ######################################################################
! ###
! ### end
! ###
! ######################################################################

