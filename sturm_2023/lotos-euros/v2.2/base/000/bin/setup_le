#! /usr/bin/env python


# ------------------------------------------------
# help
# ------------------------------------------------

"""
*            PYCASSO - PYthon Compile And Setup Scripts Organizer            *

NAME
    pycasso_setup_le  -  compile and setup LOTOS-EUROS

DESCRIPTION
    Driver script to compile and setup a model application.

    For information on arguments and options, try:
  
        pycasso_setup_le [-h|--help]
    
RETURN VALUE
    Non zero in case of any error.

"""


# ------------------------------------------------
# settings
# ------------------------------------------------

## Latest python versions seem to prepend the directory of this
## script automatically to the path, so all modules could be loaded.
## If the path is not extended automatically however, specify the
## path to the PYCASSO modules here as a tupple:
#pycasso_path = (os.curdir,'proj','pycasso','bin')

# name of file with PYCASSO user scripts for this setup:
pycasso_user_scripts = 'pycasso_user_scripts_le'


# ------------------------------------------------
# begin
# ------------------------------------------------

if __name__ == '__main__':

    # import standard modules:
    import os
    import sys
    import logging
    import traceback
    
    ## Add location of PYCASSO modules to search path:
    #sys.path.insert( 0, os.path.join(*pycasso_path) )

    # import PYCASSO tools:
    import pycasso

    #
    # *** environment modules
    #
    
    # per host ..
    if ('HOST' in os.environ.keys()) and os.environ['HOST'].startswith('app-hpc') :
    
        # check ...
        if "MODULESHOME" not in os.environ.keys() :
            #print( "ERROR - could not load environment modules without MODULESHOME" )
            #raise Exception
            # guess ...
            os.environ['MODULESHOME'] = os.path.join( os.environ['OPT'], 'Modules/3.2.10' )
        #endif
        # initialization script for environment modules:
        initfile = os.path.join( os.environ["MODULESHOME"], "init", "python.py" )
        # check ...
        if not os.path.isfile(initfile) :
            print( "ERROR - could not find environment modules initialization file: %s" % initfile )
            raise Exception
        #endif
        # load module functions:
        exec( open(initfile).read() )

        # load module functions:
        module( 'switch', 'netcdf', 'netcdf/4.6.0' )
        module( 'switch', 'netcdf-fortran', 'netcdf-fortran/4.4.4' )
        module( 'switch', 'hdf5', 'hdf5/1.8.13' )
        module( 'load', 'netcdf4/4.6.0' )
        module( 'load', 'netcdf4-fortran/4.4.4' )

    #endif  # host switch

    
    #
    # * main
    #
    
    # extract arguments from sys.argv array:
    #   0 = name of calling script, 1: = actual arguments
    args = sys.argv[1:]
    
    # try to run main routine:
    try :
        # call main routine, parse arguments and name of module with user scripts:
        pycasso.Main( args, pycasso_user_scripts )
    except pycasso.PycassoError :
        # proper error messages are displayed, so clean end:
        logging.error('')
        sys.exit(1)
    except :
        # other error, might be a bug in the scripts, so display traceback:
        for line in traceback.format_exc().split('\n') : logging.error(line)
        logging.error( 'exception from pycasso.Main' )
        sys.exit(1)
    #endtry
    
    # ok:
    sys.exit(0)

#endif


# ------------------------------------------------
# end
# ------------------------------------------------
